name: Build and Release Plugin

on:
  push:
    tags: [ 'v*.*.*' ]  # 仅当推送类似 v1.0.0 的 tag 时发布 release
  pull_request:
    branches: [ "**" ]  # 所有 PR 都运行构建检查

jobs:
  build:
    # 跳过 PR 来自外部 fork 的重复构建（可选优化）
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 17 ]
      fail-fast: true
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build Plugin with ShadowJar
        run: ./gradlew shadowJar

      - name: Debug List generated JARs
        run: ls -la build/libs/

      - name: Upload plugin JAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: plugin-jar
          path: build/libs/*.jar
          if-no-files-found: error  # 如果没生成 JAR，直接失败！

  release:
    needs: build
    runs-on: ubuntu-latest
    # 仅在 push tag 时运行（不是 PR）
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Download plugin JAR
        uses: actions/download-artifact@v3
        with:
          name: plugin-jar
          path: build/libs

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
          # 可选：自动生成 release 说明（例如从提交日志）
          # body: |
          #   Automatically built from ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
